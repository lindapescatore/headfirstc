#include <stdio.h>
#include <stdlib.h>
#include <string.h>

/* 
Linda Pescatore, 2013
Based on Head First C chapter 7, advanced functions
This exercise is not a great example of function pointers in my opinion.
No one would create functions for specific combinations of searches, would they?
But it works. So...
*/

int main() {

int NUM_ADS = 7;

char *ADS[] = {
	"William: SBM GSOH like sports, TV, dining",
	"Matt: SWM NS likes art, movies, theater",
	"Luis: SLM ND like books, theater, art",
	"Mike: DWM SD likes trucks, sports and bieber",
	"Peter: SAM likes chess, working out and art",
	"Josh: SJM likes sports, movies and theater",
	"Jed: DBM likes theater, books and dining"
};

int sports_no_bieber(char *s) {
	return strstr(s, "sport") && !strstr(s, "bieber");
}

int sports_or_workout(char *s) {
	return strstr(s, "sports") || strstr(s, "working out");
}

int ns_theater(char *s) {
	return strstr(s, "theater") && strstr(s, "NS");
}

int arts_theater_or_dining(char *s) {
	return strstr(s, "art") || strstr(s, "theater") || strstr(s, "dining");
}

void find(int (*match)(char *)) {
	int i;
	puts("Search results:");
	puts("------------------------------------------");
	for (i=0; i<NUM_ADS; i++) {
		if (match(ADS[i])) 
			printf("%s\n", ADS[i]);
	}
	puts("------------------------------------------");
}


/*	
the original version
void find() {
	int i;
	puts("Search results:");
	puts("------------------------------------------");
	for (i=0; i<NUM_ADS; i++) {
		if ( strstr(ADS[i],"sports") && !strstr(ADS[i],"bieber")) {
			printf("%s\n", ADS[i]);
		}
	}
	puts("------------------------------------------");
}
*/

	find(sports_no_bieber);
	find(sports_or_workout);
	find(ns_theater);
	find(arts_theater_or_dining);
return 0;
}
